// <auto-generated />
using System;
using Auction.App.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Auction.App.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220711142325_Buyer id not required")]
    partial class Buyeridnotrequired
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Auction.App.Models.AuctionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.HasKey("Id")
                        .HasName("pk_auctions");

                    b.ToTable("auctions", (string)null);
                });

            modelBuilder.Entity("Auction.App.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSold")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_sold");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("owner_id");

                    b.Property<DateOnly>("ReceivedAt")
                        .HasColumnType("date")
                        .HasColumnName("received_at");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_items");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_items_name");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_items_owner_id");

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("Auction.App.Models.Lot", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int>("AuctionId")
                        .HasColumnType("integer")
                        .HasColumnName("auction_id");

                    b.Property<int>("BuyerId")
                        .HasColumnType("integer")
                        .HasColumnName("buyer_id");

                    b.Property<decimal>("EndPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("end_price");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("item_id");

                    b.Property<decimal>("StartPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("start_price");

                    b.HasKey("Id", "AuctionId")
                        .HasName("pk_lots");

                    b.HasIndex("AuctionId")
                        .HasDatabaseName("ix_lots_auction_id");

                    b.HasIndex("BuyerId")
                        .HasDatabaseName("ix_lots_buyer_id");

                    b.HasIndex("ItemId")
                        .IsUnique()
                        .HasDatabaseName("ix_lots_item_id");

                    b.ToTable("lots", (string)null);
                });

            modelBuilder.Entity("Auction.App.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.HasKey("Id")
                        .HasName("pk_members");

                    b.ToTable("members", (string)null);
                });

            modelBuilder.Entity("Auction.App.Models.Item", b =>
                {
                    b.HasOne("Auction.App.Models.Member", "Owner")
                        .WithMany("Items")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_items_members_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Auction.App.Models.Lot", b =>
                {
                    b.HasOne("Auction.App.Models.AuctionInfo", "Auction")
                        .WithMany("Lots")
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_lots_auctions_auction_id");

                    b.HasOne("Auction.App.Models.Member", "Buyer")
                        .WithMany("BoughtItems")
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("fk_lots_members_buyer_id");

                    b.HasOne("Auction.App.Models.Item", "Item")
                        .WithOne("Lot")
                        .HasForeignKey("Auction.App.Models.Lot", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_lots_items_item_id");

                    b.Navigation("Auction");

                    b.Navigation("Buyer");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Auction.App.Models.AuctionInfo", b =>
                {
                    b.Navigation("Lots");
                });

            modelBuilder.Entity("Auction.App.Models.Item", b =>
                {
                    b.Navigation("Lot");
                });

            modelBuilder.Entity("Auction.App.Models.Member", b =>
                {
                    b.Navigation("BoughtItems");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
